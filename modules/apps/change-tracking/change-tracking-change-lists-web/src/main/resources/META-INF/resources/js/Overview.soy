{namespace com.liferay.change.tracking.change.lists.web.Overview}

/**
 * Renders the Overview screen
 */
{template .render}
	{@param spritemap: string}
	{@param urlProductionView: string}
	{@param? changes: [
		added: number,
		deleted: number,
		modified: number
	]}
	{@param? descriptionActiveChangeList: string}
	{@param? descriptionProductionInformation: string}
	{@param? headerDropDownMenu: list<[
		label: string,
		link: string
	]>}
	{@param? headerTitleActiveChangeList: string}
	{@param? headerTitleProductionInformation: string}
	{@param? initialFetch: bool}
	{@param? publishedBy: [
		dateTime: string,
		userInitials: string,
		userPortraitURL: string,
		userName: string
	]}

	{let $headerButtonLabel kind="text"}
		{msg desc=""}publish{/msg}
	{/let}

	{let $headerLinkLabel kind="text"}
		{msg desc=""}production-view{/msg}
	{/let}

	{let $addedLabel kind="text"}
		{msg desc=""}added{/msg}
	{/let}

	{let $deletedLabel kind="text"}
		{msg desc=""}deleted{/msg}
	{/let}

	{let $modifiedLabel kind="text"}
		{msg desc=""}modified{/msg}
	{/let}

	<div class="container-fluid-1280">
		{if not $initialFetch}
			{call .loading /}
		{else}
			<div class="row">
				<div class="col-sm-6">
					{call .overviewCard}
						{param cardState: 'border-left-blue' /}
						{param changes: [
							'added': $changes.added,
							'addedLabel': $addedLabel,
							'deleted': $changes.deleted,
							'deletedLabel': $deletedLabel,
							'modified': $changes.modified,
							'modifiedLabel': $modifiedLabel ] /}
						{param changesLabel kind="text"}
							{msg desc=""}changes{/msg}
						{/param}
						{param description: $descriptionActiveChangeList /}
						{param descriptionTitle kind="text"}
							{msg desc=""}description{/msg}
						{/param}
						{param headerButton: ['label': $headerButtonLabel] /}
						{param headerDropDownMenu: $headerDropDownMenu /}
						{param headerDropDownMenuTitle kind="text"}
							{msg desc=""}select-change-list{/msg}
						{/param}
						{param headerSubTitle kind="text"}
							{msg desc=""}active-change-list{/msg}
						{/param}
						{param headerTitle: $headerTitleActiveChangeList /}
						{param spritemap: $spritemap /}
					{/call}
				</div>

				<div class="col-sm-6">
					{call .overviewCard}
						{param cardState: 'border-left-green' /}
						{param description: $descriptionProductionInformation /}
						{param descriptionTitle kind="text"}
							{msg desc=""}description{/msg}
						{/param}
						{param headerLink: [
							'link': $urlProductionView,
							'label': $headerLinkLabel ] /}
						{param headerSubTitle kind="text"}
							{msg desc=""}published-change-list{/msg}
						{/param}
						{param headerTitle: $headerTitleProductionInformation /}
						{param publishedBy: $publishedBy /}
						{param publishedByTitle kind="text"}
							{msg desc=""}published-by{/msg}
						{/param}
						{param spritemap: $spritemap /}
					{/call}
				</div>
			</div>

			<div class="row">
				<div class="col-sm-12">
					Change List changes list placeholder
				</div>
			</div>
		{/if}
	</div>
{/template}

/**
 * Overview Card
 *
 * This template renders the component's whole content
 */
{template .overviewCard}
	{@param  spritemap: string}
	{@param? cardState: string}
	{@param? changes: [
		added: number,
		addedLabel: string,
		deleted: number,
		deletedLabel: string,
		modified: number,
		modifiedLabel: string
	]}
	{@param? changesLabel: string}
	{@param? description: string}
	{@param? descriptionTitle: string}
	{@param? headerButton: [
		label: string
	]}
	{@param? headerLink: [
		link: string,
		label: string
	]}
	{@param? headerDropDownMenu: list<[
		label: string,
		link: string
	]>}
	{@param? headerDropDownMenuTitle: string}
	{@param? headerSubTitle: string}
	{@param? headerTitle: string}
	{@param? publishedBy: [
		dateTime: string,
		userInitials: string,
		userPortraitURL: string,
		userName: string
	]}
	{@param? publishedByTitle: string}

	<div class="overview-card-sheet {$cardState}">
		{call .overviewCardHeader}
			{param headerButton: $headerButton /}
			{param headerDropDownMenu: $headerDropDownMenu /}
			{param headerDropDownMenuTitle: $headerDropDownMenuTitle /}
			{param headerLink: $headerLink /}
			{param headerSubTitle: $headerSubTitle /}
			{param headerTitle: $headerTitle /}
			{param spritemap: $spritemap /}
		{/call}

		<div class="overview-card-sheet-divider"></div>

		{call .overviewCardBody}
			{param changes: $changes /}
			{param changesLabel: $changesLabel /}
			{param description: $description /}
			{param descriptionTitle: $descriptionTitle /}
			{param publishedBy: $publishedBy /}
			{param publishedByTitle: $publishedByTitle /}
			{param spritemap: $spritemap /}
		{/call}

	</div>
{/template}

{template .overviewCardHeader}
	{@param  spritemap: string}
	{@param? headerLink: [
		link: string,
		label: string
	]}
	{@param? headerButton: [
		label: string
	]}
	{@param? headerDropDownMenu: list<[
		label: string,
		link: string
	]>}
	{@param? headerDropDownMenuTitle: string}
	{@param? headerSubTitle: string}
	{@param? headerTitle: string}

	{let $twoColumns: $headerButton /}

	<div class="overview-card-container overview-card-header">
		<div class="row">
			<div class="col-sm-{$twoColumns ? 6 : 12}">
				{if $headerSubTitle}
					<h3 data-qa-id="headerSubTitle">{$headerSubTitle}</h3>
				{/if}
				{if $headerTitle}
					<div class="overview-card-sheet-title" data-qa-id="headerTitle">{$headerTitle}</div>
				{/if}
				{if $headerLink}
					<div class="header-line">
						<a data-qa-id="headerLink" href="{$headerLink.link}" onclick="">{$headerLink.label}</a>
					</div>
				{/if}
				{if $headerDropDownMenu and $headerDropDownMenuTitle}
					<div class="header-line">
						<a aria-expanded="false" aria-haspopup="true" class="dropdown-toggle" data-qa-id="headerDropDownMenu" data-toggle="dropdown" href="#1" role="button">
							<span class="navbar-text-truncate">{$headerDropDownMenuTitle}</span>
							<span class="navbar-text-icon">
								<svg class="lexicon-icon lexicon-icon-caret-bottom" focusable="false" role="presentation">
									<use xlink:href="{$spritemap}#caret-bottom" />
								</svg>
							</span>
						</a>

						<div aria-labelledby="" class="dropdown-menu">
							{foreach $headerDropDownMenuItem in $headerDropDownMenu}
								<a class="dropdown-item" href="{$headerDropDownMenuItem.link}">{$headerDropDownMenuItem.label}</a>
							{/foreach}
							<a class="dropdown-item dropdown-item-last" href="#1">{$headerDropDownMenuTitle}</a>
						</div>
					</div>
				{/if}
			</div>

			{if $twoColumns}
				<div class="col-sm-6">
					<div class="navbar-nav stick-to-right">
						<div class="btn-group">
							<div class="btn-group-item">
								<svg class="lexicon-icon lexicon-icon-exclamation-circle" focusable="false" role="presentation">
									<use xlink:href="{$spritemap}#exclamation-circle" />
								</svg>
							</div>
							{if $headerButton}
								<div class="btn-group-item">
									<div class="flex-col">
										<button class="btn btn-default btn-primary" data-qa-id="headerButton" id="" type="button">
											<span class="lfr-btn-label">{$headerButton.label}</span>
										</button>
									</div>
								</div>
							{/if}
							<div class="btn-group-item">
								<button class="btn btn-monospaced btn-outline-borderless btn-outline-secondary btn-xs" data-qa-id="headerTrash" type="button">
									<svg class="icon-monospaced lexicon-icon lexicon-icon-trash" focusable="false" role="presentation">
										<use xlink:href="{$spritemap}#trash" />
									</svg>
								</button>
							</div>
						</div>
					</div>
				</div>
			{/if}

		</div>
	</div>
{/template}

{template .overviewCardBody}
	{@param? changes: [
		added: number,
		addedLabel: string,
		deleted: number,
		deletedLabel: string,
		modified: number,
		modifiedLabel: string
	]}
	{@param? changesLabel: string}
	{@param? description: string}
	{@param? descriptionTitle: string}
	{@param? publishedBy: [
		dateTime: string,
		userInitials: string,
		userPortraitURL: string,
		userName: string
	]}
	{@param? publishedByTitle: string}

	<div class="overview-card-body overview-card-container">

		{if $description}
			<div class="overview-card-sheet-block">
				{if $descriptionTitle}
					<h3>{$descriptionTitle}</h3>
				{/if}
				<div class="sheet-text" data-qa-id="description">
					{$description}
				</div>
			</div>
		{/if}

		{if $publishedBy}
			<div class="overview-card-sheet-block">
				{if $publishedByTitle}
					<h3>{$publishedByTitle}</h3>
				{/if}

				<div class="autofit-padded-no-gutters-x autofit-row widget-metadata">

					<div class="autofit-col">
						{if $publishedBy.userInitials}
							<div class="user-icon user-icon-color-9 user-icon-default user-icon-lg">
								<span data-qa-id="userInitials">{$publishedBy.userInitials}</span>
							</div>
						{elseif $publishedBy.userPortraitURL}
							<div class="aspect-ratio-bg-cover user-icon user-icon-lg" style="background-image:url({$publishedBy.userPortraitURL})">
							</div>
						{/if}
					</div>

					<div class="autofit-col autofit-col-expand">
						<div class="aspect-ratio-item-left-middle text-secondary" data-qa-id="publishedBy">
							{$publishedBy.dateTime} by {$publishedBy.userName}
						</div>
					</div>
				</div>
			</div>
		{/if}
		{if $changes}
			<div class="glance-card-sheet-block">
				<h3>{$changesLabel}</h3>

				<div class="changes-row">
					<div class="changes">
						<div class="big-number" data-qa-id="changesAdded">{$changes.added}</div>
						<div class="">{$changes.addedLabel}</div>
					</div>

					<div class="changes">
						<div class="big-number" data-qa-id="changesModified">{$changes.modified}</div>
						<div class="">{$changes.modifiedLabel}</div>
					</div>

					<div class="changes">
						<div class="big-number" data-qa-id="changesDeleted">{$changes.deleted}</div>
						<div class="">{$changes.deletedLabel}</div>
					</div>
				</div>
			</div>
		{/if}
	</div>
{/template}

{template .loading}
	<div class="loading-indicator">
		<span aria-hidden="true" class="loading-animation"></span>
	</div>
{/template}